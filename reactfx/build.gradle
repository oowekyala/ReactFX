apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.github.oowekyala'

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'org.junit.contrib', name: 'junit-theories', version: '4.12'
    testCompile group: 'com.pholser', name: 'junit-quickcheck-core', version: '0.4'
    testCompile group: 'com.pholser', name: 'junit-quickcheck-generators', version: '0.4'
}

javadoc {
    // ignore missing Javadoc comments or tags
    options.addStringOption('Xdoclint:all,-missing', '-quiet')
    
    // resolve links to Java and JavaFX Javadocs
    options.links = [
        'http://docs.oracle.com/javase/8/docs/api/',
        'http://docs.oracle.com/javase/8/javafx/api/'
    ]
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar

    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

signArchives.onlyIf {
    project.hasProperty('signing.keyId') && project.hasProperty('signing.password') && project.hasProperty('signing.secretKeyRingFile')
}

def doUploadArchives = project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')
if(doUploadArchives) {
    uploadArchives {
        repositories.mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
              authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots') {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'ReactFXX'
                packaging 'jar'
                description 'Reactive event streams for JavaFX'
                url 'https:/github.com/oowekyala/ReactFX'
               
                scm {
                    url 'scm:git@github.com:oowekyala/ReactFX.git'
                    connection 'scm:git@github.com:oowekyala/ReactFX.git'
                    developerConnection 'scm:git@github.com:oowekyala/ReactFX.git'
                }
               
                licenses {
                    license {
                        name 'The BSD 2-Clause License'
                        url 'http://opensource.org/licenses/BSD-2-Clause'
                        distribution 'repo'
                    }
                }
               
                developers {
                    developer {
                        name 'Tomas Mikula'
                    }
                    developer {
                        name 'Cl√©ment Fournier'
                    }
                }
            }
        }
    }
}

uploadArchives.onlyIf { doUploadArchives }
